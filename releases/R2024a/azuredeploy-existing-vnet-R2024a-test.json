{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "customVHD": {
            "type": "string",
            "metadata": {
                "description": "URL of custom virtual hard disk (VHD). To use a prebuilt MathWorks image instead, see [https://github.com/mathworks-ref-arch/license-manager-for-matlab-on-azure.git](https://github.com/mathworks-ref-arch/license-manager-for-matlab-on-azure.git)."
            }
        },
        "customVHDStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Storage account that contains the custom VHD."
            }
        },
        "customVHDResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group that contains the custom VHD."
            }
        },
        "instanceType": {
            "type": "string",
            "defaultValue": "Standard_B1ms",
            "minLength": 1,
            "metadata": {
                "description": "Azure instance type, see 'https://learn.microsoft.com/en-us/azure/virtual-machines/sizes'."
            }
        },
        "clientIPAddress": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "The IP address range that can be used access the license manager. This must be a valid IP CIDR range of the form x.x.x.x/x. Use the value &lt;your_public_ip_address&gt;/32 to restrict access to only your computer."
            }
        },
        "adminUsername": {
            "defaultValue": "ubuntu",
            "minLength": 1,
            "maxLength": 64,
            "type": "string",
            "metadata": {
                "description": "Admin username, this is used to login to the Network License Manager for MATLAB dashboard. To avoid any deployment errors, check the list of [disallowed values](https://docs.microsoft.com/en-us/rest/api/compute/virtual-machines/create-or-update?tabs=HTTP#osprofile) for adminUsername."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password for the chosen username. This is used to login to the Network License Manager for MATLAB dashboard. For the deployment to succeed, your password must meet [Azure's password requirements](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/faq#what-are-the-password-requirements-when-creating-a-vm-)."
            }
        },
        "virtualNetworkResourceID": {
            "type": "string",
            "metadata": {
                "description": "The Resource ID of an existing virtual network to deploy your server into. Specify this parameter only when deploying with the Existing Virtual Network option."
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of an existing subnet within your virtual network to deploy your server into. Specify this parameter only when deploying with the Existing Virtual Network option."
            }
        }
    },
    "variables": {
        "namingPrefix": "netlm",
        "adminUsername": "[parameters('adminUsername')]",
        "addressPrefix": [ "10.0.0.0/16" ],
        "subnetPrefix": "10.0.0.0/24",
        "newOrExistingVirtualNetwork": "Existing",
        "virtualNetworkCreateName": "[concat(variables('namingPrefix'), '-vnet')]",
        "subnetCreateName": "[concat(variables('namingPrefix'), '-subnet')]",
        "virtualNetworkName": "[if(equals(variables('newOrExistingVirtualNetwork'),'Existing'),last(split(parameters('virtualNetworkResourceID'),'/')),variables('virtualNetworkCreateName'))]",
        "subnetName": "[if(equals(variables('newOrExistingVirtualNetwork'),'Existing'),parameters('subnetName'),variables('subnetCreateName'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "subnetId": "[if(equals(variables('newOrExistingVirtualNetwork'),'New'),variables('subnetRef'),concat(parameters('virtualNetworkResourceID'), '/subnets/', parameters('subnetName')))]",
        "location": "[resourceGroup().location]",
        "serverMachineName": "[concat(take(variables('namingPrefix'), 8), '-server')]",
        "serverIPName": "[concat(variables('serverMachineName'), '-ip')]",
        "domainNameLabel": "[concat(variables('serverMachineName'), '-azure-', uniqueString(resourceGroup().id))]",        
        "publicIpTimeout": "20",
        "networkSecurityGroupName": "[concat(variables('namingPrefix'), '-nsg')]",
        "serverNICName": "[concat(variables('serverMachineName'), '-nic')]",
        "serverIPConfigName": "[concat(variables('serverMachineName'), '-ipconfig')]",
        "scriptUrl": "/opt/mathworks/license-manager/",
        "startScript": "create_cert.sh",
        "scriptExe": "[concat(variables('scriptUrl'), variables('startScript'))]",
        "installCommand": "[concat('bash ',variables('scriptExe'))]",
        "storageAccountApiVersion": "2018-07-01"
    },
    "resources": [
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-07-01",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[variables('addressPrefix')]"
                },
                "subnets": [
                    {
                        "name": "[variables('subnetCreateName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            },
            "condition": "[or(equals(variables('newOrExistingVirtualNetwork'),'New'),equals(variables('newOrExistingVirtualNetwork'),'new'))]"
        },
        {
            "name": "[variables('serverIPName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-07-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('domainNameLabel')]"
                },
                "idleTimeoutInMinutes": "[variables('publicIpTimeout')]"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-07-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "protocol": "Tcp",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allow-https",
                        "properties": {
                            "priority": 1010,
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "protocol": "Tcp",
                            "destinationPortRange": "443",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allow-netlm",
                        "properties": {
                            "priority": 1020,
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "protocol": "Tcp",
                            "destinationPortRange": "27000-27010",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allow-internal-traffic",
                        "properties": {
                            "priority": 1030,
                            "sourceAddressPrefix": "VirtualNetwork",
                            "protocol": "Tcp",
                            "destinationPortRange": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork"
                        }
                    },
                    {
                        "name": "allow-ssh",
                        "properties": {
                            "description": "allow-ssh",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1040,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('serverNICName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-07-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('serverIPName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('serverIPConfigName')]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('serverIPName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('serverMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('serverNICName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('serverMachineName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    }
                },
                "hardwareProfile": {
                    "VmSize": "[parameters('instanceType')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('serverMachineName'),'-osDisk')]",
                        "osType": "Linux",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "image": {
                            "uri": "[parameters('customVHD')]"
                        },
                        "vhd": {
                            "uri": "[concat(reference(resourceId(parameters('customVHDResourceGroup'), 'Microsoft.Storage/storageAccounts/', parameters('customVHDStorageAccount')), variables('storageAccountApiVersion')).primaryEndpoints.blob, 'vhds/',variables('serverMachineName'), uniquestring(resourceGroup().id), '-osDisk.vhd')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces/', variables('serverNICName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        },
        {
            "name": "[concat(variables('serverMachineName'), '/Installation')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('serverMachineName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('installCommand'),' ',reference(variables('serverIPName')).dnsSettings.fqdn)]"
                }
            }
        },
        {
            "name": "nlm-azure-linux-deployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        }
    ],
    "outputs": {
        "NetworkLicenseManagerAddress": {
            "value": "[concat('https://', reference(variables('serverIPName')).dnsSettings.fqdn)]",
            "type": "string"
        }
    }
}
